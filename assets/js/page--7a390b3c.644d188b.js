(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{506:function(t,e,o){"use strict";o.r(e);var n=o(2),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("What are the three types of relationships?")]),t._v(" "),o("p",[t._v("One to One\nOne to Many\nMany to Many")]),t._v(" "),o("p",[t._v("What are the benefits of the traditional linking of relationships instead of Embedding?")]),t._v(" "),o("p",[t._v("It will not grow the oringial document make it less likely that applications will run in the max size of 16-MB. It's also easier to return paginated comments.")]),t._v(" "),o("p",[t._v("What are some of the challenges faced when deciding how to manage a many-to-many relationship that ultimately drive your decision on how to create it?")]),t._v(" "),o("p",[t._v("I would think that the problem you run into is how to format it. For example in the Node udemy course there was an example of Doctors -- Patients. The issue I think I would run into is how to link the different Doctors to each specific Patients.")]),t._v(" "),o("p",[t._v("https://github.com/KalebMcElyea/gregslist-api")])])}),[],!1,null,null,null);e.default=i.exports}}]);