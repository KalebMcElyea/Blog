(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{501:function(e,t,s){"use strict";s.r(t);var o=s(2),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("What are the three states of a Promise?")]),e._v(" "),s("ol",[s("li",[e._v("Pending: The starting state before the promise succeeds or fails.")]),e._v(" "),s("li",[e._v("Resolved: A completed promise")]),e._v(" "),s("li",[e._v("Rejected: A failed promise")])]),e._v(" "),s("p",[e._v('How do promises seek to resolve the issues of "callback hell"?')]),e._v(" "),s("p",[e._v("It seeks to resolve the issues by chaining callbacks with another callback. Hence when chaining callbacks with promise it makes the code clean easier to read.")]),e._v(" "),s("p",[e._v("What is the difference between .then() and .catch()?")]),e._v(" "),s("p",[e._v(".then(): This method is called after the promise is resolved. Then we can decide what to do with the resolved promise.\n.catch(): This method is called after the promise has failed. If the promise fails then it will go to the catch method and rely a different message on our console log.")]),e._v(" "),s("p",[e._v("https://github.com/KalebMcElyea/latewinter2021-gregslist")])])}),[],!1,null,null,null);t.default=a.exports}}]);